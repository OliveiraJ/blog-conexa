<?php

/**
 * This is the model base class for the table "comment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Comment".
 *
 * Columns in table "comment" available as properties of the model,
 * followed by relations of table "comment" available as properties of the model.
 *
 * @property integer $comment_id
 * @property string $comment_title
 * @property string $comment_text
 * @property string $comment_date
 * @property integer $post_id
 * @property integer $user_id
 *
 * @property User $user
 * @property Post $post
 */
abstract class BaseComment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'comment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Comment|Comments', $n);
	}

	public static function representingColumn() {
		return 'comment_title';
	}

	public function rules() {
		return array(
			array('comment_title, comment_text, comment_date, post_id, user_id', 'required'),
			array('post_id, user_id', 'numerical', 'integerOnly'=>true),
			array('comment_title', 'length', 'max'=>255),
			array('comment_id, comment_title, comment_text, comment_date, post_id, user_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'post' => array(self::BELONGS_TO, 'Post', 'post_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'comment_id' => Yii::t('app', 'Comment'),
			'comment_title' => Yii::t('app', 'Comment Title'),
			'comment_text' => Yii::t('app', 'Comment Text'),
			'comment_date' => Yii::t('app', 'Comment Date'),
			'post_id' => null,
			'user_id' => null,
			'user' => null,
			'post' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('comment_id', $this->comment_id);
		$criteria->compare('comment_title', $this->comment_title, true);
		$criteria->compare('comment_text', $this->comment_text, true);
		$criteria->compare('comment_date', $this->comment_date, true);
		$criteria->compare('post_id', $this->post_id);
		$criteria->compare('user_id', $this->user_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}